import FFT.jang_fft as fftlib
import os
import matplotlib.pyplot as plt
import numpy as np

resultsfolderpath = os.path.join("c:"+os.sep,"Users","eecis","Desktop","Arturo_Sem_Project","Automation_git","BDC-Automation","Results","DifferentialSNDR")
plt.style.use('seaborn-v0_8-deep')
fig, ax = plt.subplots()
plt.grid()
fig2, ax2 = plt.subplots()
folder = os.path.join(resultsfolderpath, "6PEG_AD2_FILT_10G_FIA_2024-10-06_17-53-37")
voltages = [0.08,0.07, 0.06, 0.05, 0.045, 0.04, 0.035, 0.03, 0.025, 0.02, 0.015, 0.01]
SNRs = []
SNDRs = []
for voltage in voltages:
    csvfile = os.path.join(folder, "Input_v"+str(voltage)+"_f9.9639892578125", "Input_v"+str(voltage)+"_f9.9639892578125_post_processed.csv")
    timestamps, waveform = fftlib.readWaveformCSV(csvfile)
    fs, Ydb, SNDR, Enob, SNR, Enob_noise_only, THD, n = fftlib.convertWaveformToPSD(timestamps, waveform, 9.963989257812500)
    SNRs.append(SNR)
    SNDRs.append(SNDR)

ax.plot([2*x for x in voltages],SNRs)
ax.plot([2*x for x in voltages],SNDRs)

folder = os.path.join(resultsfolderpath, "6PEG_AD2_FILT_0.01VCM_2024-10-06_19-38-33")
voltages = [0.08,0.07, 0.06, 0.05, 0.045, 0.04, 0.035, 0.03, 0.025, 0.02, 0.015, 0.01]
SNRs = []
SNDRs = []
for voltage in voltages:
    csvfile = os.path.join(folder, "Input_v"+str(voltage)+"_f9.9639892578125_post_processed.csv")
    timestamps, waveform = fftlib.readWaveformCSV(csvfile)
    fs, Ydb, SNDR, Enob, SNR, Enob_noise_only, THD, n = fftlib.convertWaveformToPSD(timestamps, waveform, 9.963989257812500)
    SNRs.append(SNR)
    SNDRs.append(SNDR)
ax.plot([2*x for x in voltages],SNRs)
ax.plot([2*x for x in voltages],SNDRs)
fig.suptitle("SNR/SNDR vs Common Mode vs Ramp Approach")
fig2.suptitle("SNDR vs Common Mode")
ax.set_xlabel("Voltage Full Scale")
ax2.set_xlabel("Voltage Full Scale")
ax.set_ylabel("SNR/SNDR (dB)")
ax2.set_ylabel("SNR (dB)")
fig.dpi = 100
fig2.dpi = 100
plt.grid()

resultsfolderpath = os.path.join("c:"+os.sep,"Users","eecis","Desktop","Arturo_Sem_Project","Automation_git","BDC-Automation","Results","DifferentialSNDR")
folder = os.path.join(resultsfolderpath, "6PEG_AD2_FILT_0.02VCM_2024-10-06_20-13-16")
voltages = [0.08,0.07, 0.06, 0.05, 0.045, 0.04, 0.035, 0.03, 0.025, 0.02, 0.015, 0.01]
SNRs = []
SNDRs = []
for voltage in voltages:
    csvfile = os.path.join(folder, "Input_v"+str(voltage)+"_f9.9639892578125","Input_v"+str(voltage)+"_f9.9639892578125_post_processed.csv")
    timestamps, waveform = fftlib.readWaveformCSV(csvfile)
    fs, Ydb, SNDR, Enob, SNR, Enob_noise_only, THD, n = fftlib.convertWaveformToPSD(timestamps, waveform, 9.963989257812500)
    SNRs.append(SNR)
    SNDRs.append(SNDR)

ax.plot([2*x for x in voltages],SNRs)
ax.plot([2*x for x in voltages],SNDRs)

resultsfolderpath = os.path.join("c:"+os.sep,"Users","eecis","Desktop","Arturo_Sem_Project","Automation_git","BDC-Automation","Results","DifferentialSNDR")
folder = os.path.join(resultsfolderpath, "6PEG_AD2_FILT_0.03VCM_2024-10-06_20-49-42")
voltages = [0.08,0.07, 0.06, 0.05, 0.045, 0.04, 0.035, 0.03, 0.025, 0.02, 0.015, 0.01]
SNRs = []
SNDRs = []
for voltage in voltages:
    csvfile = os.path.join(folder, "Input_v"+str(voltage)+"_f9.9639892578125", "Input_v"+str(voltage)+"_f9.9639892578125_post_processed.csv")
    timestamps, waveform = fftlib.readWaveformCSV(csvfile)
    fs, Ydb, SNDR, Enob, SNR, Enob_noise_only, THD, n = fftlib.convertWaveformToPSD(timestamps, waveform, 9.963989257812500)
    SNRs.append(SNR)
    SNDRs.append(SNDR)

ax.plot([2*x for x in voltages],SNRs)
ax.plot([2*x for x in voltages],SNDRs)

resultsfolderpath = os.path.join("c:"+os.sep,"Users","eecis","Desktop","Arturo_Sem_Project","Automation_git","BDC-Automation","Results","DifferentialSNDR")
folder = os.path.join(resultsfolderpath, "6PEG_AD2_FILT_0.04VCM_2024-10-06_21-28-10")
voltages = [0.08,0.07, 0.06, 0.05, 0.045, 0.04, 0.035, 0.03, 0.025, 0.02, 0.015, 0.01]
SNRs = []
SNDRs = []
for voltage in voltages:
    csvfile = os.path.join(folder, "Input_v"+str(voltage)+"_f9.9639892578125", "Input_v"+str(voltage)+"_f9.9639892578125_post_processed.csv")
    timestamps, waveform = fftlib.readWaveformCSV(csvfile)
    fs, Ydb, SNDR, Enob, SNR, Enob_noise_only, THD, n = fftlib.convertWaveformToPSD(timestamps, waveform, 9.963989257812500)
    SNRs.append(SNR)
    SNDRs.append(SNDR)

ax.plot([2*x for x in voltages],SNRs)
ax.plot([2*x for x in voltages],SNDRs)

resultsfolderpath = os.path.join("c:"+os.sep,"Users","eecis","Desktop","Arturo_Sem_Project","Automation_git","BDC-Automation","Results","DifferentialSNDR")
folder = os.path.join(resultsfolderpath, "6PEG_AD2_FILT_0.05VCM_2024-10-06_22-08-10")
voltages = [0.08,0.07, 0.06, 0.05, 0.045, 0.04, 0.035, 0.03, 0.025, 0.02, 0.015, 0.01]
SNRs = []
SNDRs = []
for voltage in voltages:
    csvfile = os.path.join(folder, "Input_v"+str(voltage)+"_f9.9639892578125", "Input_v"+str(voltage)+"_f9.9639892578125_post_processed.csv")
    timestamps, waveform = fftlib.readWaveformCSV(csvfile)
    fs, Ydb, SNDR, Enob, SNR, Enob_noise_only, THD, n = fftlib.convertWaveformToPSD(timestamps, waveform, 9.963989257812500)
    SNRs.append(SNR)
    SNDRs.append(SNDR)

ax.plot([2*x for x in voltages],SNRs)
ax.plot([2*x for x in voltages],SNDRs)

#ax.legend(["0VCM","0.1VCM","0.2VCM","0.3VCM","0.4VCM","0.5VCM"])
#ax2.legend(["0VCM","0.1VCM","0.2VCM","0.3VCM","0.4VCM","0.5VCM"])
#fig2.show()

#input()
#fftlib.plotPSD(fs, Ydb, n, SNDR, SNR, Enob, THD)
#fftlib.savePSD(fs, Ydb, n, SNDR, SNR, Enob, THD, "newtest.png")




FullScalesFIA10G = [0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09,0.1]
InputArrayFIA10G = np.zeros((10,10))
AverageArrayFIA10G = np.zeros((10,10))
NoiseArrayFIA10G = np.zeros((10,10))

InputArrayFIA10G[0] = [0.0,0.0011111111111111111,0.0022222222222222222,0.003333333333333333,0.0044444444444444444,0.005555555555555556,0.006666666666666666,0.0077777777777777776,0.008888888888888889,0.01]
AverageArrayFIA10G[0] = [-62.22313048743566,-0.01469159786304031,0.007447774750227066,109.37366030881017,250.5959810587664,387.5958351041224,519.7146335524714,665.5608108108108,801.7557219381544,959.5651831668181]
NoiseArrayFIA10G[0] = [8.94893091189486,0.7271884887605407,0.2673112015166884,11.209261401118418,10.970417675918256,9.370737771651122,8.052527978697011,14.924842655557814,13.463987425655565,10.85315682361128]

InputArrayFIA10G[1] = [0.0,0.0022222222222222222,0.0044444444444444444,0.006666666666666666,0.008888888888888889,0.011111111111111112,0.013333333333333332,0.015555555555555555,0.017777777777777778,0.02]
AverageArrayFIA10G[1] = [-56.16867543218895,0.01465334544353618,107.55558253900796,232.0896189383417,358.45316009956895,477.63051771117165,601.0080959337716,725.284664885867,849.7370269452014,981.6190041392745]
NoiseArrayFIA10G[1] = [4.148286221054705,0.8607023827129737,5.449871814821022,4.895952285599542,5.2644221709442895,4.791362567918983,4.875550846622262,4.060182027094112,4.488710958460666,5.101981328011028]

InputArrayFIA10G[2] = [0.0,0.003333333333333333,0.006666666666666666,0.009999999999999998,0.013333333333333332,0.016666666666666666,0.019999999999999997,0.02333333333333333,0.026666666666666665,0.03]
AverageArrayFIA10G[2] = [-46.90814411141387,30.662004238570997,149.61945237083359,268.86601505585236,388.7694217378141,511.914259763851,629.557066537154,749.8769352194766,868.7694789383978,992.990251286709]
NoiseArrayFIA10G[2] = [2.943423059074859,4.00862910935184,2.5169539565471992,2.8906879266756715,3.0450046243698736,1.2170598776242945,2.7668240877812895,3.104865323400409,3.9025911548821193,4.757424399650185]

InputArrayFIA10G[3] = [0.0,0.0044444444444444444,0.008888888888888889,0.013333333333333332,0.017777777777777778,0.022222222222222223,0.026666666666666665,0.03111111111111111,0.035555555555555556,0.04]
AverageArrayFIA10G[3] = [-40.83016800584368,55.97146673142302,173.55931277319087,290.87888538125304,405.5707607309817,521.7599829559289,640.0754006799417,758.0253103239479,874.9639115955192,996.0071029626032]
NoiseArrayFIA10G[3] = [1.893181168422204,1.8567668493425438,1.9927023767485215,2.5878608576069406,1.905758481221146,1.9803117367791252,2.2757131512964257,2.3562186422989853,3.00066085476183,3.4387742148355334]

InputArrayFIA10G[4] = [0.0,0.005555555555555556,0.011111111111111112,0.016666666666666666,0.022222222222222223,0.02777777777777778,0.03333333333333333,0.03888888888888889,0.044444444444444446,0.05]
AverageArrayFIA10G[4] = [-35.85764456554647,71.80496518316681,188.16847793090886,303.30014570179696,418.5370269452013,531.8029263554125,647.8213416118822,764.1078193297717,878.9379352104148,998.6914925825007]
NoiseArrayFIA10G[4] = [1.6489030174576405,1.6489483773405824,1.584858568692887,1.7832745085776656,2.045502780286652,1.647422320022438,1.5811126051926634,2.5737130923028975,1.7245951683634821,1.831390345312078]

InputArrayFIA10G[5] = [0.0,0.006666666666666666,0.013333333333333332,0.019999999999999997,0.026666666666666665,0.03333333333333333,0.039999999999999994,0.04666666666666666,0.05333333333333333,0.06]
AverageArrayFIA10G[5] = [-30.640723652258377,82.5375508469431,197.6846046143544,312.03033605812897,426.96964545896066,540.5973963063881,655.2344393315573,770.207145019679,885.4482423653694,1003.6443661971831]
NoiseArrayFIA10G[5] = [2.145505407587328,1.3439630601360446,1.3390596292739232,1.3021745625196453,1.2906532226846774,1.6593679977793274,1.4815048288057984,1.3266032894112354,1.3826866571530916,1.471328234659925]

InputArrayFIA10G[6] = [0.0,0.007777777777777778,0.015555555555555557,0.023333333333333334,0.031111111111111114,0.03888888888888889,0.04666666666666667,0.05444444444444445,0.06222222222222223,0.07]
AverageArrayFIA10G[6] = [-26.255600752838323,88.90930119308497,204.25412821758135,319.91117722056947,435.6989895300706,551.4394390140246,666.1018153117601,781.4331020209398,896.90608537693,1016.2283407200534]
NoiseArrayFIA10G[6] = [1.1486007312220672,1.1725613399891057,1.1686942461425742,1.079811039536905,1.126914225840072,1.1088896950583247,1.2054017947831817,1.236110540027307,1.0065886015414467,1.3869083227234424]

InputArrayFIA10G[7] = [0.0,0.008888888888888889,0.017777777777777778,0.026666666666666665,0.035555555555555556,0.044444444444444446,0.05333333333333333,0.06222222222222222,0.07111111111111111,0.08]
AverageArrayFIA10G[7] = [-22.68704468188441,92.1403593977659,207.33890402664244,322.28265213442324,437.54941719281203,552.8320179698883,667.1929941719281,782.2400702349237,897.053245097444,1015.6821889457025]
NoiseArrayFIA10G[7] = [1.0680954024236853,1.0284175270905436,1.0878503375097126,1.0424992628677308,1.0229213278868687,1.0158468082833754,1.021368093958309,1.1284944522055589,0.9695223216826967,1.2435787954317818]

InputArrayFIA10G[8] = [0.0,0.01,0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09]
AverageArrayFIA10G[8] = [-20.094341913550267,94.71740841659098,209.36177040445628,323.84446338345407,438.99957389822254,553.9569637204772,667.628156872268,782.4706630336058,897.0535876475931,1014.6779887996104]
NoiseArrayFIA10G[8] = [0.8697116142903353,1.0081756343074693,0.9110812998754092,0.8792572539393972,0.8090445106962746,0.9049875784048333,0.9276740892140175,1.0222631136039202,0.8757359236236248,1.0074159142680936]

InputArrayFIA10G[9] = [0.0,0.011111111111111112,0.022222222222222223,0.03333333333333333,0.044444444444444446,0.05555555555555556,0.06666666666666667,0.07777777777777778,0.08888888888888889,0.1]
AverageArrayFIA10G[9] = [-17.731032394792614,97.72425127830533,211.82180802622793,326.71779887996104,441.7982514722846,556.6810344827586,671.3081441114139,785.7547960174842,900.1406714832129,1017.9965911857804]
NoiseArrayFIA10G[9] = [0.8350933601904992,0.9369864729646948,0.7941565531974899,0.8458536779941883,0.8548535975285853,0.8461751204158304,1.1102924369781817,0.8544025457665758,0.8477387154770252,0.9777724813193766]

SNR = np.zeros((10,1))
for i in range(len(FullScalesFIA10G)):
    mednoise = np.median(NoiseArrayFIA10G[i])
    SNR[i] = 20*np.log10(1024/2/np.sqrt(2)/mednoise)

ax.plot(FullScalesFIA10G,SNR)

fig.show()
input()